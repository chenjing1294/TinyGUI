//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TinyGUI.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("TinyGUI.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Choose Image Files.
        /// </summary>
        public static string ChooseImageFiles {
            get {
                return ResourceManager.GetString("ChooseImageFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Compression.
        /// </summary>
        public static string Compression {
            get {
                return ResourceManager.GetString("Compression", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Copyright.
        /// </summary>
        public static string Copyright {
            get {
                return ResourceManager.GetString("Copyright", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All copyright information reserved. Include EXIF copyright notation (JPEG), XMP permission notation (PNG), and Photoshop copyright notation or URL. Use up to 90 bytes, plus the length of the copyright data..
        /// </summary>
        public static string CopyrightTip {
            get {
                return ResourceManager.GetString("CopyrightTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Scale down the image and crop the image if necessary. The result has the exact given dimensions. Which part of the picture will be cropped is determined automatically. Smart algorithms determine the most important areas in the image..
        /// </summary>
        public static string CoverTip {
            get {
                return ResourceManager.GetString("CoverTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Creation date.
        /// </summary>
        public static string CreationTime {
            get {
                return ResourceManager.GetString("CreationTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Any GPS location information that describes where the picture or photo was created is preserved. Contains EXIF GPS Dimensions and GPS Accuracy tags (JPEG). Uses about 130 extra bytes..
        /// </summary>
        public static string CreationTimeTip {
            get {
                return ResourceManager.GetString("CreationTimeTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Drop Image Here.
        /// </summary>
        public static string DropImageHere {
            get {
                return ResourceManager.GetString("DropImageHere", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Scale down the image so that it fits the given size. You must provide both width and height. The downscaled image will not exceed any of these dimensions..
        /// </summary>
        public static string FitTip {
            get {
                return ResourceManager.GetString("FitTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to https://tinypng.com/developers.
        /// </summary>
        public static string KeyUrl {
            get {
                return ResourceManager.GetString("KeyUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Language:.
        /// </summary>
        public static string Lang {
            get {
                return ResourceManager.GetString("Lang", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Location.
        /// </summary>
        public static string Location {
            get {
                return ResourceManager.GetString("Location", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Any creation date or time is preserved. This is the moment when an image or photo is initially created. Includes EXIF raw datetime stamp (JPEG) or XMP creation time (PNG). Uses about 70 extra bytes..
        /// </summary>
        public static string LocationTip {
            get {
                return ResourceManager.GetString("LocationTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Preserve metadata:.
        /// </summary>
        public static string PreserveMetadata {
            get {
                return ResourceManager.GetString("PreserveMetadata", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can specify metadata that is copied from the uploaded image to the compressed version. Currently supports preserving copyright information, GPS location and creation date. Preserving metadata increases the size of compressed files, so you should only keep important metadata..
        /// </summary>
        public static string PreserveMetadataTip {
            get {
                return ResourceManager.GetString("PreserveMetadataTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to https://www.redisant.com.
        /// </summary>
        public static string Redisant {
            get {
                return ResourceManager.GetString("Redisant", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Replace Original Image.
        /// </summary>
        public static string ReplaceOriginalImage {
            get {
                return ResourceManager.GetString("ReplaceOriginalImage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Scale down the image. You must provide target width or height, not both. The reduced image will have a certain width or height..
        /// </summary>
        public static string ScaleTip {
            get {
                return ResourceManager.GetString("ScaleTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Settings.
        /// </summary>
        public static string Settings {
            get {
                return ResourceManager.GetString("Settings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Smart cut.
        /// </summary>
        public static string SmartCut {
            get {
                return ResourceManager.GetString("SmartCut", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Support Me.
        /// </summary>
        public static string SupportMe {
            get {
                return ResourceManager.GetString("SupportMe", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Detect images with simple backgrounds. The image will be scaled down to the width and height you provide. If a single object is detected in an image, the algorithm will add more background where necessary, or crop out unimportant parts..
        /// </summary>
        public static string ThumbTip {
            get {
                return ResourceManager.GetString("ThumbTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Upload.
        /// </summary>
        public static string Upload {
            get {
                return ResourceManager.GetString("Upload", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can upload any JPEG or PNG image to Tinify API for compression. We will automatically detect the image type and optimize accordingly using the TinyPNG or TinyJPG engine..
        /// </summary>
        public static string UploadTip {
            get {
                return ResourceManager.GetString("UploadTip", resourceCulture);
            }
        }
    }
}
