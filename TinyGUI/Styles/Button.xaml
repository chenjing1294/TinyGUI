<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <!-- 图标按钮 -->
  <Style x:Key="ButtonWithIconStyle" TargetType="{x:Type Button}">
    <Setter Property="Focusable" Value="False" />
    <Setter Property="FontSize" Value="16" />
    <Setter Property="Foreground" Value="#5D6B99" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Grid>
            <Border x:Name="Border" Background="Transparent" Width="26" Height="26"
                    CornerRadius="5"
                    SnapsToDevicePixels="True">
              <TextBlock FontFamily="{TemplateBinding FontFamily}"
                         SnapsToDevicePixels="True"
                         x:Name="TextBlock"
                         Foreground="{TemplateBinding Foreground}"
                         Text="{TemplateBinding Content}"
                         VerticalAlignment="Center"
                         HorizontalAlignment="Center" />
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter TargetName="Border" Property="Background" Value="#88E5E5E5" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="TextBlock" Property="Foreground" Value="#DFDFDF" />
            </Trigger>
            <EventTrigger RoutedEvent="Click">
              <EventTrigger.Actions>
                <BeginStoryboard>
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetProperty="FontSize" From="14" To="10"
                                     Duration="0:0:0.1"
                                     AutoReverse="True" />
                  </Storyboard>
                </BeginStoryboard>
              </EventTrigger.Actions>
            </EventTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <!-- 图标按钮 -->

  <!-- 图标按钮 -->
  <Style x:Key="CloseButton" TargetType="{x:Type Button}">
    <Setter Property="Focusable" Value="False" />
    <Setter Property="FontSize" Value="12" />
    <Setter Property="Foreground" Value="#5D6B99" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Grid>
            <Border x:Name="Border" Background="Transparent" Width="18" Height="18"
                    CornerRadius="5"
                    SnapsToDevicePixels="True">
              <TextBlock FontFamily="{TemplateBinding FontFamily}"
                         SnapsToDevicePixels="True"
                         x:Name="TextBlock"
                         Foreground="{TemplateBinding Foreground}"
                         Text="{TemplateBinding Content}"
                         VerticalAlignment="Center"
                         HorizontalAlignment="Center" />
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter TargetName="Border" Property="Background" Value="#FF0101" />
              <Setter Property="Foreground" Value="White" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="TextBlock" Property="Foreground" Value="#DFDFDF" />
            </Trigger>
            <EventTrigger RoutedEvent="Click">
              <EventTrigger.Actions>
                <BeginStoryboard>
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetProperty="FontSize" From="14" To="10"
                                     Duration="0:0:0.1"
                                     AutoReverse="True" />
                  </Storyboard>
                </BeginStoryboard>
              </EventTrigger.Actions>
            </EventTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <!-- 图标按钮 -->

  <Style x:Key="CornerButton" TargetType="{x:Type Button}">
    <Setter Property="FontFamily" Value="{StaticResource JetBrainsMono}" />
    <Setter Property="Foreground" Value="White" />
    <Setter Property="Padding" Value="5" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Border x:Name="Border" CornerRadius="6"
                  Background="#5D6B99" SnapsToDevicePixels="True">
            <ContentPresenter RecognizesAccessKey="True" Content="{TemplateBinding ContentControl.Content}"
                              ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                              HorizontalAlignment="Center"
                              ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"
                              Margin="{TemplateBinding Control.Padding}" />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="Button.IsPressed" Value="True">
              <Trigger.EnterActions>
                <BeginStoryboard>
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="Border"
                                     Storyboard.TargetProperty="Opacity"
                                     To="0.5" Duration="0:0:0.2" />
                  </Storyboard>
                </BeginStoryboard>
              </Trigger.EnterActions>
              <Trigger.ExitActions>
                <BeginStoryboard>
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="Border"
                                     Storyboard.TargetProperty="Opacity"
                                     Duration="0:0:0.2" />
                  </Storyboard>
                </BeginStoryboard>
              </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="IsDefault" Value="True">
              <Setter TargetName="Border" Property="Background" Value="#2675BF" />
              <Setter Property="Foreground" Value="White" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Foreground" Value="#BFBFBF" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="CustomCheckBoxStyle" TargetType="{x:Type CheckBox}">
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type CheckBox}">
          <Grid x:Name="templateRoot" SnapsToDevicePixels="True">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto" />
              <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Border Grid.Column="0" x:Name="CheckBoxBorder" Width="18" Height="18"
                    SnapsToDevicePixels="True" Margin="0 0 6 0"
                    BorderBrush="LightGray"
                    Background="#AAD8D8D8"
                    CornerRadius="2"
                    BorderThickness="1"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center">
              <Path x:Name="outOptionMark" VerticalAlignment="Center" HorizontalAlignment="Center"
                    Data="M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z"
                    Fill="White" Margin="1" Opacity="0" Stretch="Uniform" />
            </Border>
            <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False"
                              HorizontalAlignment="Left"
                              RecognizesAccessKey="True"
                              SnapsToDevicePixels="True"
                              VerticalAlignment="Center" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="BorderBrush" TargetName="CheckBoxBorder" Value="#5D6B99" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
              <Setter Property="Opacity" TargetName="outOptionMark" Value="1" />
              <Setter Property="BorderBrush" TargetName="CheckBoxBorder" Value="#2675BF" />
              <Setter Property="Background" TargetName="CheckBoxBorder" Value="#5D6B99" />
            </Trigger>
            <Trigger Property="IsChecked" Value="{x:Null}">
              <Setter Property="Opacity" TargetName="outOptionMark" Value="0" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="CustomRadioButtonStyle" TargetType="{x:Type RadioButton}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RadioButton}">
          <Border x:Name="Border"
                  Padding="10 4"
                  CornerRadius="10">
            <ContentPresenter x:Name="contentPresenter"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              Focusable="False"
                              RecognizesAccessKey="True" />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="true">
              <Setter TargetName="Border" Property="Background" Value="White" />
              <Setter TargetName="contentPresenter" Property="TextBlock.Foreground" Value="Black" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>